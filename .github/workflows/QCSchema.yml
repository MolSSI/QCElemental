name: QCSchema

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        conda-env: [base]
        python-version: [3.7]
    env:
      PYVER: ${{ matrix.python-version }}
      CONDA_ENV: ${{ matrix.conda-env }}

    steps:
    - name: Checkout
      #uses: actions/checkout@v2
      uses: actions/checkout@v1
      with:
        path: qcel

    - name: Checkout schema repo
      #uses: actions/checkout@v2
      uses: actions/checkout@v1
      with:
        repository: loriab/QCSchema
        #repository: MolSSI/QCSchema
        path: qcsk
        ref: py2json
        #ref: master
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

    - name: Python Setup
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Create Environment
      shell: bash
      working-directory: ./qcel
      run: |
        eval "$(conda shell.bash hook)" && conda activate
        python devtools/scripts/create_conda_env.py -n=test -p=$PYVER devtools/conda-envs/$CONDA_ENV.yaml

    - name: Install
      shell: bash
      working-directory: ./qcel
      run: |
        eval "$(conda shell.bash hook)" && conda activate test
        python -m pip install . --no-deps

    - name: Environment Information
      shell: bash
      run: |
        eval "$(conda shell.bash hook)" && conda activate test
        conda list --show-channel-urls

    - name: QCSchema from QCElemental
      shell: bash
      working-directory: ./qcel
      run: |
        eval "$(conda shell.bash hook)" && conda activate test
        make qcschema
        ls -l qcschema
        cp -p qcschema/* ../qcsk/qcschema_json/
        # Note: `qcschema_json` is a folder in the py2json branch containing plain JSON files of the schema,
        #       rather than the python module of the current repo

    - name: ASDF
      shell: bash
      working-directory: ./qcsk
      run: |
        git diff --color-words
        pull_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
        branch=qcel-${pull_number}
        git checkout -b ${branch}
        git remote -v
        git config --global user.email "lori.burns@gmail.com"
        git config --global user.name "Lori A. Burns"
        git add -A
        git commit -m "auto-generated from QCElemental"
#        git push origin ${branch}

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        directory: ./qcsk
        repository: loriab/QCSchema
#   #     branch: ${branch}
        branch: "qcel-204"
        github_token: ${{ secrets.QCSK_TOKEN }}


#        git remote add github "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git"
#git pull github ${GITHUB_REF} --ff-only
#
#git add ...
#
#git commit -m "Update native model"
#git push github HEAD:${GITHUB_REF}

#remote_repo="https://${GITHUB_ACTOR}:${INPUT_GITHUB_TOKEN}@github.com/${REPOSITORY}.git"

#git push "${remote_repo}" HEAD:${INPUT_BRANCH} --follow-tags $_FORCE_OPTION $_TAGS;

#Push to branch ${branch}
#remote: Not Found
#fatal: repository 'https://github.com/https://github.com/loriab/QCSchema.git.git/' not found

#github_token    string      Token for the repo. Can be passed in using ${{ secrets.GITHUB_TOKEN }}.
#branch  string  'master'    Destination branch to push changes.
#force   boolean false   Determines if force push is used.
#tags    boolean false   Determines if --tags is used.
#directory   string  '.' Directory to change to before pushing.
#repository  string  ''  Repository name. Default or empty repository name represents current github repository. If you want to push to other repository, you should make a personal access token and use it as the github_token input.


#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@master
#    - name: Create local changes
#      run: |
#        ...
#    - name: Commit files
#      run: |
#        git config --local user.email "action@github.com"
#        git config --local user.name "GitHub Action"
#        git commit -m "Add changes" -a
#    - name: Push changes
#      uses: ad-m/github-push-action@master
#      with:
#        github_token: ${{ secrets.GITHUB_TOKEN }}
